{"version":3,"sources":["api.js","components/Heading/Heading.js","components/RepoLink/RepoLink.js","components/SearchBar/SearchBar.js","components/Movie/Movie.js","components/MoviesContainer/MoviesContainer.js","components/Banner/Banner.js","components/Nomination/Nomination.js","components/NominationsContainer/NominationsContainer.js","App.js","index.js"],"names":["fetchMovie","search","a","axios","get","params","apikey","s","response","data","Error","Search","fetchMovieDetails","imdbID","i","Header","className","RepoLink","target","href","SearchBar","setSearchTerm","onChange","event","value","trim","placeholder","Movie","movie","handleClick","isNominated","useState","expanded","setExpanded","movieDetails","setMovieDetails","useEffect","getMovieDetails","toggleExpanded","src","Poster","alt","Title","Year","onClick","disabled","Awards","BoxOffice","Genre","Metascore","Production","Rated","Released","Runtime","MovieContainer","movies","nominations","searchTerm","Nominate","filter","nominee","length","map","index","Banner","Nomination","removeNomination","NominationContainer","App","setMovies","JSON","parse","window","localStorage","getItem","setNominations","timeoutID","setTimeoutID","clearTimeout","setTimeout","movieData","getMovies","setItem","stringify","updatedNominations","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.908fd9f2.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n// Used to fetch array of movie objects from OMDB API based on the search string provided\r\n// Note: only provides minimal info on the movies, need to make follow up request with movie ID for more details, see fetchMovieDetails\r\nconst fetchMovie = async (search) => {\r\n\r\n    const response = await axios.get('https://www.omdbapi.com/', {\r\n        params: {\r\n            apikey: 'fd36052a',\r\n            s: search\r\n        }\r\n    });\r\n\r\n    if (response.data.Error) {\r\n        return [];\r\n    }\r\n\r\n    return response.data.Search;\r\n};\r\n\r\n// Used to make a follow up request to OMDB API to get more specific details about a movie\r\nconst fetchMovieDetails = async (imdbID) => {\r\n\r\n    const response = await axios.get('https://www.omdbapi.com/', {\r\n        params: {\r\n            apikey: 'fd36052a',\r\n            i: imdbID\r\n        }\r\n    });\r\n\r\n    if (response.data.Error) {\r\n        return [];\r\n    }\r\n\r\n    return response.data;\r\n}\r\n\r\nexport {fetchMovie , fetchMovieDetails};","import React from 'react';\r\nimport './Heading.scss';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"Heading\">\r\n            <h1>The Shoppies - <span>Nominate Your Favorite Films</span></h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './RepoLink.scss';\r\n\r\nconst RepoLink = () => {\r\n    return (\r\n        <div className=\"RepoLink\">\r\n            <a target=\"_blank\" href=\"https://github.com/mnesen/shopify-frontend-challenge\"><h4>GitHub Repository</h4></a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RepoLink;","import React from 'react';\r\nimport './SearchBar.scss';\r\n\r\nconst SearchBar = ({ setSearchTerm }) => {\r\n\r\n    const handleChange = (event) => {\r\n        setSearchTerm(event.target.value.trim());\r\n    };\r\n\r\n    return (\r\n        <div className=\"SearchBar\" >\r\n            <input onChange={handleChange} placeholder=\"Search for movies\" ></input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import React, { useEffect, useState } from 'react';\r\nimport { fetchMovieDetails } from '../../api';\r\nimport './Movie.scss';\r\n\r\nconst Movie = ({ movie, handleClick, isNominated }) => {\r\n\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [movieDetails, setMovieDetails] = useState();\r\n\r\n    useEffect(() => {\r\n\r\n        const getMovieDetails = async (imdbID) => {\r\n            const movie = await fetchMovieDetails(imdbID);\r\n            setMovieDetails(movie);\r\n        }\r\n\r\n        // if movie is expanded and we havent made request to get movie details yet\r\n        if (expanded && !movieDetails) {\r\n            getMovieDetails(movie.imdbID);\r\n        }\r\n    });\r\n\r\n    const toggleExpanded = () => {\r\n        setExpanded(!expanded);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"Movie\">\r\n                <img src={movie.Poster} alt=\"Movie poster\" />\r\n                <h4>{movie.Title} ({movie.Year})</h4>\r\n\r\n                <div className=\"Buttons\">\r\n                    {expanded ? <i className=\"fas fa-chevron-up\" onClick={toggleExpanded}></i> : <i className=\"fas fa-chevron-down\" onClick={toggleExpanded}></i>}\r\n                    <button\r\n                        onClick={() => { handleClick(movie) }}\r\n                        disabled={isNominated(movie)}\r\n                    >\r\n                        Nominate\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            {expanded && movieDetails &&\r\n                <div className=\"Movie-Details\">\r\n\r\n                    <div className=\"left\">\r\n                        <p><span>Awards</span></p>\r\n                        <p>{movieDetails.Awards}</p>\r\n\r\n                        <p><span>Box Office</span></p>\r\n                        <p>{movieDetails.BoxOffice}</p>\r\n\r\n                        <p><span>Genre</span></p>\r\n                        <p>{movieDetails.Genre}</p>\r\n\r\n                        <p><span>Metascore</span></p>\r\n                        <p>{movieDetails.Metascore}</p>\r\n                    </div>\r\n\r\n                    <div className=\"right\">\r\n                        <p><span>Production</span></p>\r\n                        <p>{movieDetails.Production}</p>\r\n\r\n                        <p><span>Rated</span></p>\r\n                        <p>{movieDetails.Rated}</p>\r\n\r\n                        <p><span>Released</span></p>\r\n                        <p>{movieDetails.Released}</p>\r\n\r\n                        <p><span>Runtime</span></p>\r\n                        <p>{movieDetails.Runtime}</p>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movie;","import React from 'react';\r\nimport Movie from '../Movie/Movie'\r\nimport './MoviesContainer.scss';\r\n\r\nconst MovieContainer = ({ movies, nominations, searchTerm, Nominate }) => {\r\n\r\n    const handleClick = (movie) => {\r\n        Nominate(movie);\r\n    }\r\n\r\n    const isNominated = (movie) => {\r\n        if(nominations.filter(nominee => nominee.imdbID === movie.imdbID).length > 0 || nominations.length >= 5){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <div className=\"MoviesContainer\">\r\n            {searchTerm? <h4>Results for \"<span>{searchTerm}</span>\"</h4> : <h4>Results</h4>}\r\n            {movies &&\r\n                movies.map((movie, index) =>\r\n                    <Movie movie={movie} handleClick={handleClick} isNominated={isNominated} key={movie.imdbID} />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MovieContainer;","import React from 'react';\r\nimport './Banner.scss';\r\n\r\nconst Banner = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"Banner\" >\r\n                <h4>Your nominations for The Shoppies!</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner;","import React from 'react';\r\nimport './Nomination.scss';\r\n\r\nconst Nomination = ({ movie, removeNomination }) => {\r\n\r\n    return (\r\n        <div className=\"Nomination\" key={movie.imdbID}>\r\n            <img src={movie.Poster} alt=\"Movie poster\" />\r\n\r\n            <h3>{movie.Title} ({movie.Year})</h3>\r\n            <button onClick={() => { removeNomination(movie) }}>\r\n                Remove\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nomination;","import React from 'react';\r\nimport './NominationsContainer.scss';\r\n\r\nimport Banner from '../Banner/Banner';\r\nimport Nomination from '../Nomination/Nomination';\r\n\r\nconst NominationContainer = ({ nominations, removeNomination }) => {\r\n\r\n    return (\r\n        <div className=\"NominationsContainer\">\r\n            {nominations.length>=5 ? <Banner /> : \"\"}\r\n\r\n            {nominations.length > 0 ? <h4>Nominations ({nominations.length}/5):</h4> : <h4>Nominations</h4>}\r\n\r\n            {nominations.map((movie, index) =>\r\n                <Nomination movie={movie} removeNomination={removeNomination} key={movie.imdbID}/>\r\n            )}\r\n            {/* {nominations.length>=5 ? <Banner /> : \"\"} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NominationContainer;\r\n","import React, { useState, useEffect } from 'react';\nimport { fetchMovie } from './api';\n\n\nimport Heading from './components/Heading/Heading';\nimport RepoLink from './components/RepoLink/RepoLink';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport MoviesContainer from './components/MoviesContainer/MoviesContainer';\nimport NominationsContainer from './components/NominationsContainer/NominationsContainer';\n\nimport './App.css';\n\nfunction App() {\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [movies, setMovies] = useState();\n  const [nominations, setNominations] = useState(JSON.parse(window.localStorage.getItem(\"nominations\")) || []);\n  const [timeoutID, setTimeoutID] = useState();\n\n  useEffect(() => {\n    const getMovies = async () => {\n      // Delay search input to avoid making too many requests to the OMDB API (Limit: 1000 requests per day)\n      // Everytime the search term changes this useEffect runs and sets a new timeoutID, if the user changes the search term before\n      // this timeout has finished, clear the timeoutID, therfore not running the code in the setTimeout function which makes the request\n      if (timeoutID) {\n        clearTimeout(timeoutID);\n      }\n      setTimeoutID(setTimeout(async () => {\n        const movieData = await fetchMovie(searchTerm);\n        setMovies(movieData);\n\n      }, 400));\n    };\n\n    if (searchTerm) {\n      getMovies();\n    }\n  }, [searchTerm]);\n\n  // Update local storage everytime the nominations state changes\n  useEffect(() => {\n\n    window.localStorage.setItem(\"nominations\", JSON.stringify(nominations));\n\n  }, [nominations]);\n\n\n  const Nominate = (movie) => {\n    // push movie onto nominations array\n    setNominations([...nominations, movie]);\n  };\n\n  const removeNomination = (movie) => {\n    const updatedNominations = nominations.filter(nominee => nominee.imdbID !== movie.imdbID);\n    setNominations(updatedNominations);\n  };\n\n  return (\n    <div className=\"App\">\n\n      <RepoLink />\n\n      <Heading />\n\n      <SearchBar\n        setSearchTerm={setSearchTerm}\n      />\n\n      <MoviesContainer\n        movies={movies}\n        nominations={nominations}\n        searchTerm={searchTerm}\n        Nominate={Nominate}\n      />\n  \n      <NominationsContainer\n        nominations={nominations}\n        removeNomination={removeNomination}\n      />\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}